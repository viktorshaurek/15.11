import java.util.Random;

interface Average {
    float average();
}


interface Scholarship {
    float rate();
}
class Person {
    String p_name;

   
    public Person(String name) {
        this.p_name = name;
    }
}
class Employee extends Person implements Average {
    int no_salaries;
    int[] salary = new int[12];


    public Employee(String name, int n) {
        super(name);
        this.no_salaries = n;

        Random rand = new Random();
        for (int i = 0; i < 12; i++) {
            this.salary[i] = rand.nextInt(30001);
        }
    }
    public float average() {
        if (this.salary.length == 0) {
            return 0;
        }
        int sum = 0;
        for (int s : this.salary) {
            sum += s;
        }
        return (float) sum / this.salary.length;
    }
}
class Student extends Person implements Average, Scholarship {
    int no_grades;
    Employee parent1;
    Employee parent2;
    int[] grade = new int[6];

    
    public Student(String name, int n, Employee r1, Employee r2) {
        super(name);
        this.no_grades = n;
        this.parent1 = r1;
        this.parent2 = r2;

        Random rand = new Random();
        for (int i = 0; i < 6; i++) {
            this.grade[i] = rand.nextInt(6) + 5;
        }
    }
    public float average() {
        int sum = 0;
        for (int g : this.grade) {
            sum += g;
        }
        return (float) sum / this.grade.length;
    }

   
    @Override
    public float rate() {
        float gpa = this.average();
        float parentAvgSalaries = (parent1.average() + parent2.average()) / 2;

        return gpa * 6 + (60000 - parentAvgSalaries) * 4;
    }
}

public class Main {
    public static void main(String[] args) {
        // Create array of 6 employees
        Employee[] employees = new Employee[6];
        for (int i = 0; i < 6; i++) {
            if (i < 2) {
                employees[i] = new Employee("Unemployed" + (i + 1), 0);
            } else {
                employees[i] = new Employee("Employee" + (i + 1), 12);
            }
        }
        Student[] students = new Student[3];
        for (int i = 0; i < 3; i++) {
            students[i] = new Student("Student" + (i + 1), 6, employees[i * 2], employees[i * 2 + 1]);
        }
           for (Student student : students) {
            System.out.println("Name: " + student.p_name);
            System.out.println("GPA: " + student.average());
            System.out.println("First Parent: " + student.parent1.p_name + ", Average Salary: " + student.parent1.average());
            System.out.println("Second Parent: " + student.parent2.p_name + ", Average Salary: " + student.parent2.average());
            System.out.println("Scholarship Points: " + student.rate());
            System.out.println();
        }
        Student scholarshipRecipient = students[0];
        float maxPoints = students[0].rate();
        for (Student student : students) {
            if (student.rate() > maxPoints) {
                maxPoints = student.rate();
                scholarshipRecipient = student;
            }
        }

        System.out.println("The student with the highest scholarship points is: " + scholarshipRecipient.p_name);
    }
}
